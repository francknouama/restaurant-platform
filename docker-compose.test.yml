version: '3.8'

services:
  # === INFRASTRUCTURE ===
  
  postgres:
    image: postgres:15-alpine
    container_name: restaurant-postgres-test
    environment:
      POSTGRES_DB: restaurant_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d restaurant_platform"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: restaurant-redis-test
    ports:
      - "6379:6379"
    networks:
      - restaurant-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # === BACKEND (Monolithic for Testing) ===
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: restaurant-backend-test
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      DB_NAME: restaurant_platform
      DB_SSLMODE: disable
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SERVER_PORT: 8080
      GIN_MODE: debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - restaurant-network
    restart: unless-stopped


networks:
  restaurant-network:
    driver: bridge